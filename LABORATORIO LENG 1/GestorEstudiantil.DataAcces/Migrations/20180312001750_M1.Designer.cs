// <auto-generated />
using GestorEstudiantil.DataAcces;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GestorEstudiantil.DataAcces.Migrations
{
    [DbContext(typeof(GestorEstudiantilDBContext))]
    [Migration("20180312001750_M1")]
    partial class M1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("GestorEstudiantil.models.Asistencia", b =>
                {
                    b.Property<int>("AsistenciaId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Asistio");

                    b.Property<int>("EstudianteMatriculadoId");

                    b.Property<DateTime>("FechaAsistencia");

                    b.HasKey("AsistenciaId");

                    b.HasIndex("EstudianteMatriculadoId");

                    b.ToTable("Asistencia");
                });

            modelBuilder.Entity("GestorEstudiantil.models.Estudiante", b =>
                {
                    b.Property<string>("EstudianteId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<string>("Nombres");

                    b.HasKey("EstudianteId");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("GestorEstudiantil.models.EstudianteMatriculado", b =>
                {
                    b.Property<int>("EstudianteMatriculadoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EstudianteId");

                    b.Property<string>("EstudianteId1");

                    b.Property<DateTime>("FechaMatricula");

                    b.Property<int>("SemestreMateriaId");

                    b.HasKey("EstudianteMatriculadoId");

                    b.HasIndex("EstudianteId1");

                    b.HasIndex("SemestreMateriaId");

                    b.ToTable("EstudianteMatriculado");
                });

            modelBuilder.Entity("GestorEstudiantil.models.Materia", b =>
                {
                    b.Property<int>("MateriaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NombreMateria");

                    b.HasKey("MateriaId");

                    b.ToTable("Materia");
                });

            modelBuilder.Entity("GestorEstudiantil.models.Semestre", b =>
                {
                    b.Property<int>("SemestreId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NombreSemestre");

                    b.HasKey("SemestreId");

                    b.ToTable("Semestre");
                });

            modelBuilder.Entity("GestorEstudiantil.models.SemestreMateria", b =>
                {
                    b.Property<int>("SemestreMateriaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MateriaId");

                    b.Property<int>("SemestreId");

                    b.HasKey("SemestreMateriaId");

                    b.HasIndex("MateriaId");

                    b.HasIndex("SemestreId");

                    b.ToTable("SemestreMateria");
                });

            modelBuilder.Entity("GestorEstudiantil.models.Asistencia", b =>
                {
                    b.HasOne("GestorEstudiantil.models.EstudianteMatriculado", "EstudianteMatriculado")
                        .WithMany("Asistencia")
                        .HasForeignKey("EstudianteMatriculadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestorEstudiantil.models.EstudianteMatriculado", b =>
                {
                    b.HasOne("GestorEstudiantil.models.Estudiante", "Estudiante")
                        .WithMany("Materia")
                        .HasForeignKey("EstudianteId1");

                    b.HasOne("GestorEstudiantil.models.SemestreMateria", "SemestreMateria")
                        .WithMany("EstudianteMatriculado")
                        .HasForeignKey("SemestreMateriaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestorEstudiantil.models.SemestreMateria", b =>
                {
                    b.HasOne("GestorEstudiantil.models.Materia", "Materia")
                        .WithMany("Materias")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestorEstudiantil.models.Semestre", "Semestre")
                        .WithMany("Materias")
                        .HasForeignKey("SemestreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
